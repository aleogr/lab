# Namespace

apiVersion: v1
kind: Namespace
metadata:
  name: system
  labels:
    name: system

---

# ConfigMap

#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: configmap-env-system
#  namespace: system
#data:
#  PORT: 8080
#
#---

#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: configmap-properties-system
#  namespace: system
#data:
#  container1.properties: |
#    key1=value1
#    key2=value2
#
#---

# Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-system
  namespace: system
spec:
  selector:
    matchLabels:
      pod: system
  template:
    metadata:
      labels:
        pod: system
    spec:
      containers:
        - name: container-app
          image: ghcr.io/aleogr/k8s-app
          ports:
            - containerPort: 8080
#          envFrom:
#            - configMapRef:
#              name: configmap-env-system
#          volumeMounts:
#            - name: container1-properties
#              mountPath: "/config"
#              readOnly: true
#      volumes:
#        - name: container1-properties
#          configMap:
#            name: configmap-properties-system
#            items:
#              - key: "container1.properties"
#                path: "container1.properties"

#      imagePullSecrets:
#        - name: secret-ghcr

---

# Horizontal Pod Autoscaler

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-system
  namespace: system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: deployment-system
  minReplicas: 3
  maxReplicas: 6
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70

---

# ClusterIP Service

apiVersion: v1
kind: Service
metadata:
  name: service-system
  namespace: system
spec:
  selector:
    pod: system
  ports:
    - name: port-api
      protocol: TCP
      port: 8080

---

# Ingress

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-system
  namespace: system
spec:
  ingressClassName: nginx
  rules:
    - host: localhost
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: service-system
                port:
                  name: port-api
